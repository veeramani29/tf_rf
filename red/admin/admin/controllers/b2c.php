<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class B2c extends CI_Controller {    public function __construct() {        parent::__construct();        $this->load->database();        $this->load->model('B2c_Model');        $this->load->model('Home_Model');        $this->is_admin_logged_in();    }    private function is_admin_logged_in() {        if (!$this->session->userdata('admin_logged_in')) {            redirect('login/index');        }    }    function create_user() {        $this->form_validation->set_rules('user_email', 'Email', 'trim|required|valid_email|is_unique[user_info.user_email]');        $this->form_validation->set_rules('user_password', 'Password', 'trim|required|matches[passconf]');        $this->form_validation->set_rules('passconf', 'Password Confirmation', 'trim|required');        //$this->form_validation->set_rules('user_logo', 'User Picture', 'trim|required');        $this->form_validation->set_rules('first_name', 'First Name', 'trim|required');        $this->form_validation->set_rules('last_name', 'Last Name', 'trim|required');        $this->form_validation->set_rules('mobile_no', 'Mobile No', 'trim|required|integer|min_length[10]');        $this->form_validation->set_rules('address', 'Address', 'trim|required');        $this->form_validation->set_rules('pin_code', 'Pincode', 'trim|required|integer|min_length[6]');        $this->form_validation->set_rules('city', 'City', 'trim|required');        $this->form_validation->set_rules('state', 'State', 'trim|required');        $this->form_validation->set_rules('country', 'Country', 'required');        $data['status'] = '';        $data['errors'] = '';        $data['country_list'] = $this->Home_Model->get_country_list();        if ($this->form_validation->run() == FALSE) {            $data['user_email'] = $this->input->post('user_email');            $data['first_name'] = $this->input->post('first_name');            $data['middle_name'] = $this->input->post('middle_name');            $data['last_name'] = $this->input->post('last_name');            $data['mobile_no'] = $this->input->post('mobile_no');            $data['address'] = $this->input->post('address');            $data['pin_code'] = $this->input->post('pin_code');            $data['city'] = $this->input->post('city');            $data['state'] = $this->input->post('state');            $this->load->view('b2c/create_user', $data);        } else {            $user_email = $this->input->post('user_email');            $user_password = md5($this->input->post('user_password'));            $title = $this->input->post('title');            $first_name = $this->input->post('first_name');            $middle_name = $this->input->post('middle_name');            $last_name = $this->input->post('last_name');            $mobile_no = $this->input->post('mobile_no');            $address = $this->input->post('address');            $pin_code = $this->input->post('pin_code');            $city = $this->input->post('city');            $state = $this->input->post('state');            $country = $this->input->post('country');            $email_check = $this->B2c_Model->check_email_availability($user_email);            if ($email_check != '' || !empty($email_check)) {                $data['errors'] = 'Email Already Exists. Please use different email id to continue registration...';                $this->load->view('b2c/create_user', $data);            } else {                $image_path = '';                if ($this->B2c_Model->add_user($user_email, $user_password, $title, $first_name, $middle_name, $last_name, $mobile_no, $address, $pin_code, $city, $state, $country, $image_path)) {                    redirect('b2c/user_manager', 'refresh');                } else {                    $data['errors'] = 'User Registration Not Done. Please try after some time...';                    $this->load->view('b2c/user_manager', $data);                }            }        }    }    public function user_manager() {        $data['user_info'] = $this->B2c_Model->get_user_list();        $this->load->view('b2c/user_manager', $data);    }    function manage_user_status() {        if (isset($_POST['user_id']) && isset($_POST['status'])) {            $user_id = $_POST['user_id'];            $status = $_POST['status'];            $update = $this->B2c_Model->manage_user_status($user_id, $status);            echo $update;        } else {            return false;        }    }    public function view_user_info($user_id = '', $status = '', $errors = '') {        $data['status'] = $status;        $data['errors'] = $errors;        $data['country_list'] = $this->Home_Model->get_country_list();        $data['user_id'] = $user_id;        $data['user_info'] = $this->B2c_Model->get_user_info_by_id($user_id);        $this->load->view('b2c/view_user_info', $data);    }    function update_user_info() {        $this->form_validation->set_rules('first_name', 'First Name', 'trim|required');        $this->form_validation->set_rules('last_name', 'Last Name', 'trim|required');        $this->form_validation->set_rules('mobile_no', 'Mobile No', 'trim|required|integer|min_length[10]');        $this->form_validation->set_rules('address', 'Address', 'trim|required');        $this->form_validation->set_rules('pin_code', 'Pincode', 'trim|required|integer|min_length[6]');        $this->form_validation->set_rules('city', 'City', 'trim|required');        $this->form_validation->set_rules('state', 'State', 'trim|required');        $this->form_validation->set_rules('country', 'Country', 'required');        $data['status'] = '';        $data['errors'] = '';        $data['country_list'] = $this->Home_Model->get_country_list();        $data['user_id'] = $user_id = $this->input->post('user_id');        $data['user_info'] = $this->B2c_Model->get_user_info_by_id($user_id);        if ($this->form_validation->run() == FALSE) {            $this->load->view('b2c/view_user_info', $data);        } else {            $user_id = $this->input->post('user_id');            $title = $this->input->post('title');            $first_name = $this->input->post('first_name');            $middle_name = $this->input->post('middle_name');            $last_name = $this->input->post('last_name');            $mobile_no = $this->input->post('mobile_no');            $address = $this->input->post('address');            $pin_code = $this->input->post('pin_code');            $city = $this->input->post('city');            $state = $this->input->post('state');            $country = $this->input->post('country');            $user_email = $this->input->post('user_email');            $user_logo = $this->input->post('user_logo');            if ($this->B2c_Model->update_user($user_id, $title, $first_name, $middle_name, $last_name, $mobile_no, $address, $pin_code, $city, $state, $country, $user_logo)) {                redirect('b2c/view_user_info/' . $user_id . '/1', 'refresh');            } else {                $data['errors'] = 'User Profile Not Updated. Please try after some time...';                $this->load->view('b2c/view_user_info', $data);            }        }    }    function change_user_password($user_id = '') {        $this->form_validation->set_rules('password', 'New Password', 'trim|required|matches[passconf]');        $this->form_validation->set_rules('passconf', 'Password Confirmation', 'trim|required');        $data['status'] = '';        $data['errors'] = '';        $data['user_id'] = $user_id;        $data['user_info'] = $user_info = $this->B2c_Model->get_user_info_by_id($user_id);        if ($this->form_validation->run() == FALSE) {            $this->load->view('b2c/change_user_password', $data);        } else {            if ($this->input->post('password') == $this->input->post('passconf')) {                $password = md5($this->input->post('password'));                if ($this->B2c_Model->update_user_password($user_id, $password)) {                    $data['status'] = 1;                } else {                    $data['errors'] = 'User Password not Updated. Please try after some time...';                }            } else {                $data['errors'] = 'Current Password is wrong. Please enter correct current password...';            }            $this->load->view('b2c/change_user_password', $data);        }    }    // B2C Hotel Markup Manager    public function hotel_markup_manager() {        $data['api_list'] = $this->Home_Model->get_api_list();        $data['country_list'] = $this->B2c_Model->get_hotel_country_list();        $data['city_list'] = $this->B2c_Model->get_hotel_city_list();        $data['currency_list'] = $this->B2c_Model->get_currency_list();        $data['b2c_markup_list'] = $this->B2c_Model->get_hotel_markup_list();        $this->load->view('b2c/hotel_markup_manager', $data);    }    // B2C Flight Markup Manager    public function flight_markup_manager() {        $data['api_list'] = $this->Home_Model->get_api_list();        $data['country_list'] = $this->B2c_Model->get_flight_country_list();        $data['city_list'] = $this->B2c_Model->get_flight_city_list();        $data['airlines_list'] = $this->B2c_Model->get_airlines_list();        $data['currency_list'] = $this->B2c_Model->get_currency_list();        $data['b2c_markup_list'] = $this->B2c_Model->get_flight_markup_list();        $this->load->view('b2c/flight_markup_manager', $data);    }    // B2C Car Markup Manager    public function car_markup_manager() {        $data['api_list'] = $this->Home_Model->get_api_list();        $data['country_list'] = $this->Home_Model->get_country_list();        $data['b2c_markup_list'] = $this->B2c_Model->get_car_markup_list();        $this->load->view('b2c/car_markup_manager', $data);    }    function update_b2c_markups() {        if (isset($_POST) && isset($_POST['service_type'])) {            $service_type = $_POST['service_type'];            $markup_type = $_POST['markup_type'];            $api_name = $_POST['api_name'];            $markup = $_POST['markup'];            $country = $_POST['country'];            $currency = $_POST['currency'];            $city = NULL;            $hotel = NULL;            $airline = NULL;            if ($markup_type == 'specific_city') {                $city = $_POST['city'];            }            if ($markup_type == 'specific_hotel') {                $city = 'hotel';                $hotel = $_POST['hotel'];            }            if ($markup_type == 'specific_airline') {                $city = 'airline';                $airline = $_POST['airline'];            }            if ($api_name == 'all') {                if ($markup_type == 'generic') {                    $this->B2c_Model->delete_b2c_markup($markup_type, $service_type);                }                $api_list = $this->Home_Model->get_api_list();                for ($i = 0; $i < count($api_list); $i++) {                    if ($api_list[$i]->service_type == $service_type) {                        $check = $this->B2c_Model->b2c_markup_checking($country, $city, $hotel, $airline, $api_list[$i]->api_name, $markup_type, $service_type, $currency);                        if ($check == '') {                            $this->B2c_Model->add_b2c_markup($country, $city, $hotel, $airline, $api_list[$i]->api_name, $markup, $markup_type, $service_type, $currency);                        } else {                            $this->B2c_Model->delete_id_b2c_markup($country, $city, $hotel, $airline, $api_list[$i]->api_name, $markup_type, $service_type, $currency);                            $this->B2c_Model->add_b2c_markup($country, $city, $hotel, $airline, $api_list[$i]->api_name, $markup, $markup_type, $service_type, $currency);                        }                    }                }            } else {                $check = $this->B2c_Model->b2c_markup_checking($country, $city, $hotel, $airline, $api_name, $markup_type, $service_type, $currency);                if ($check == '') {                    $this->B2c_Model->add_b2c_markup($country, $city, $hotel, $api_name, $airline, $markup, $markup_type, $service_type, $currency);                } else {                    $this->B2c_Model->delete_id_b2c_markup($country, $city, $hotel, $airline, $api_name, $markup_type, $service_type, $currency);                    $this->B2c_Model->add_b2c_markup($country, $city, $hotel, $airline, $api_name, $markup, $markup_type, $service_type, $currency);                }            }            echo '1';        } else {            echo '1';        }    }    function manage_b2c_markup_status() {        if (isset($_POST['markup_id']) && isset($_POST['status'])) {            $markup_id = $_POST['markup_id'];            $status = $_POST['status'];            if ($status != '2') {                $update = $this->B2c_Model->manage_b2c_markup_status($markup_id, $status);            } else {                $update = $this->B2c_Model->delete_b2c_markup_status($markup_id);            }            echo $update;        } else {            return false;        }    }    public function b2c_reports_manager() {        $data['flight_booking_summary'] = $this->B2c_Model->get_b2c_flight_booking_summary();        $data['hotel_booking_summary'] = $this->B2c_Model->get_b2c_hotel_booking_summary();        $data['car_booking_summary'] = $this->B2c_Model->get_b2c_car_booking_summary();        $this->load->view('b2c/b2c_reports_manager', $data);    }    public function markup_list() {        $query = $this->db->query($sql = "select * from admin_markup order by id asc");        if ($query->num_rows() > 0) {            $data['markup_list'] = $query->row();        } else {            $data['markup_list'] = '';        }        $this->load->view('b2c/manage_markup', $data);    }    function manage_markup_status() {        if (isset($_POST['user_id']) && isset($_POST['status'])) {            $user_id = $_POST['user_id'];            $status = $_POST['status'];            $update = $this->B2c_Model->manage_markup_status($user_id, $status);            echo $update;        } else {            return false;        }    }    function add_markup($id = '') {        if ($_POST) {            $domFlight = $this->input->post('domestic_flight');            $IntFlight = $this->input->post('international_flight');            $hotel = $this->input->post('hotels');            $car = $this->input->post('cars');            $package = $this->input->post('packages');            $sightseen = $this->input->post('sightseen');            $addMarkup = $this->B2c_Model->add_markup($domFlight, $IntFlight, $hotel, $car, $package, $sightseen);            redirect('b2c/markup_list', 'refresh');        } else {            $query = $this->db->query($sql = "select * from admin_markup where module_type='b2c'");            if ($query->num_rows() > 0) {                $data['markup'] = $query->row();            } else {                $data['markup'] = '';            }            $this->load->view('b2c/add_markup', $data);        }    }    ############################################## NEW CODE ##########################################################    function flight_markup_list(){        $data['markup_list'] = $this->B2c_Model->getB2cFlightMarkupList();        $this->load->view('b2c/flight_markup_list',$data);    }        function edit_flight_markup($id){        $data['id'] = $id;        if($_POST){            $markup_id = $this->input->post('markup_id');            $twoer_code = $this->input->post('tower_code');            $yq = $this->input->post('yq');            $discount = $this->input->post('discount');            $discount_to_user = $this->input->post('discount_to_user');            $discount_type = $this->input->post('discount_type');            $from_date = $this->input->post('from_date');            $to_date = $this->input->post('to_date');            $this->B2c_Model->updateFlightMarkup($markup_id,$twoer_code,$yq,$discount,$discount_to_user,$discount_type,$from_date,$to_date);            redirect('b2c/flight_markup_list');        }else{            $data['markup'] = $this->B2c_Model->getFlightMarkupOnId($id);            $this->load->view('b2c/edit_flight_markup',$data);        }            }}/* End of file b2c.php *//* Location: ./admin/controllers/b2c.php */